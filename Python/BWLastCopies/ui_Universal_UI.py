# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'Universal_UI.ui'
##
## Created by: Qt User Interface Compiler version 6.4.0
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QAbstractScrollArea, QApplication, QCheckBox, QFrame,
    QLabel, QLineEdit, QMainWindow, QMenu,
    QMenuBar, QPlainTextEdit, QProgressBar, QPushButton,
    QSizePolicy, QTabWidget, QTextBrowser, QTextEdit,
    QToolButton, QWidget)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.resize(1280, 720)
        sizePolicy = QSizePolicy(QSizePolicy.Fixed, QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QSize(1280, 720))
        MainWindow.setMaximumSize(QSize(1280, 720))
        MainWindow.setMouseTracking(True)
        self.actionReihe_A = QAction(MainWindow)
        self.actionReihe_A.setObjectName(u"actionReihe_A")
        self.actionBW_LastCopies = QAction(MainWindow)
        self.actionBW_LastCopies.setObjectName(u"actionBW_LastCopies")
        self.actionbearbeiten = QAction(MainWindow)
        self.actionbearbeiten.setObjectName(u"actionbearbeiten")
        self.actionbearbeiten.setCheckable(False)
        self.actionbearbeiten.setShortcutVisibleInContextMenu(True)
        self.actionExit = QAction(MainWindow)
        self.actionExit.setObjectName(u"actionExit")
        self.actionExit.setMenuRole(QAction.QuitRole)
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.ReiheA_BWL = QTabWidget(self.centralwidget)
        self.ReiheA_BWL.setObjectName(u"ReiheA_BWL")
        self.ReiheA_BWL.setGeometry(QRect(0, 0, 1280, 720))
        sizePolicy.setHeightForWidth(self.ReiheA_BWL.sizePolicy().hasHeightForWidth())
        self.ReiheA_BWL.setSizePolicy(sizePolicy)
        self.ReiheA_BWL.setMinimumSize(QSize(1280, 720))
        self.ReiheA_BWL.setMaximumSize(QSize(1280, 720))
        self.ReiheA_BWL.setFocusPolicy(Qt.ClickFocus)
        self.tab_reihe_a = QWidget()
        self.tab_reihe_a.setObjectName(u"tab_reihe_a")
        self.pushButton = QPushButton(self.tab_reihe_a)
        self.pushButton.setObjectName(u"pushButton")
        self.pushButton.setGeometry(QRect(1180, 620, 75, 23))
        self.pushButton.setFocusPolicy(Qt.NoFocus)
        self.progressBar = QProgressBar(self.tab_reihe_a)
        self.progressBar.setObjectName(u"progressBar")
        self.progressBar.setGeometry(QRect(10, 620, 1141, 23))
        self.progressBar.setToolTipDuration(2)
        self.progressBar.setValue(0)
        self.progressBar.setOrientation(Qt.Horizontal)
        self.name = QCheckBox(self.tab_reihe_a)
        self.name.setObjectName(u"name")
        self.name.setGeometry(QRect(10, 590, 70, 17))
        self.name.setFocusPolicy(Qt.NoFocus)
        self.testloginfo = QPlainTextEdit(self.tab_reihe_a)
        self.testloginfo.setObjectName(u"testloginfo")
        self.testloginfo.setEnabled(True)
        self.testloginfo.setGeometry(QRect(30, 510, 891, 71))
        self.testloginfo.setFocusPolicy(Qt.NoFocus)
        self.testloginfo.setAcceptDrops(True)
        self.loglabel = QLabel(self.tab_reihe_a)
        self.loglabel.setObjectName(u"loglabel")
        self.loglabel.setGeometry(QRect(30, 490, 47, 21))
        font = QFont()
        font.setPointSize(10)
        self.loglabel.setFont(font)
        self.ReiheA_BWL.addTab(self.tab_reihe_a, "")
        self.tab_bwl = QWidget()
        self.tab_bwl.setObjectName(u"tab_bwl")
        self.tabwidget_auto_manual = QTabWidget(self.tab_bwl)
        self.tabwidget_auto_manual.setObjectName(u"tabwidget_auto_manual")
        self.tabwidget_auto_manual.setGeometry(QRect(0, 0, 1271, 671))
        self.tabwidget_auto_manual.setFocusPolicy(Qt.ClickFocus)
        self.Automatic = QWidget()
        self.Automatic.setObjectName(u"Automatic")
        self.do_run_bwlastcopies = QPushButton(self.Automatic)
        self.do_run_bwlastcopies.setObjectName(u"do_run_bwlastcopies")
        self.do_run_bwlastcopies.setGeometry(QRect(1180, 610, 75, 23))
        self.do_run_bwlastcopies.setFocusPolicy(Qt.NoFocus)
        self.progressbar_lastcopies = QProgressBar(self.Automatic)
        self.progressbar_lastcopies.setObjectName(u"progressbar_lastcopies")
        self.progressbar_lastcopies.setGeometry(QRect(10, 610, 1141, 23))
        self.progressbar_lastcopies.setToolTipDuration(2)
        self.progressbar_lastcopies.setValue(0)
        self.progressbar_lastcopies.setOrientation(Qt.Horizontal)
        self.loginfo_bwl = QPlainTextEdit(self.Automatic)
        self.loginfo_bwl.setObjectName(u"loginfo_bwl")
        self.loginfo_bwl.setEnabled(True)
        self.loginfo_bwl.setGeometry(QRect(30, 500, 891, 71))
        self.loginfo_bwl.setFocusPolicy(Qt.NoFocus)
        self.loginfo_bwl.setAcceptDrops(True)
        self.xml_path = QLineEdit(self.Automatic)
        self.xml_path.setObjectName(u"xml_path")
        self.xml_path.setEnabled(False)
        self.xml_path.setGeometry(QRect(100, 40, 113, 19))
        self.xml_path.setFocusPolicy(Qt.NoFocus)
        self.show_url = QCheckBox(self.Automatic)
        self.show_url.setObjectName(u"show_url")
        self.show_url.setGeometry(QRect(120, 240, 70, 17))
        self.show_url.setFocusPolicy(Qt.NoFocus)
        self.loglabel_bwlastcopies = QLabel(self.Automatic)
        self.loglabel_bwlastcopies.setObjectName(u"loglabel_bwlastcopies")
        self.loglabel_bwlastcopies.setGeometry(QRect(30, 480, 47, 21))
        self.loglabel_bwlastcopies.setFont(font)
        self.import_xml_label = QLabel(self.Automatic)
        self.import_xml_label.setObjectName(u"import_xml_label")
        self.import_xml_label.setGeometry(QRect(20, 40, 71, 21))
        self.log_url = QCheckBox(self.Automatic)
        self.log_url.setObjectName(u"log_url")
        self.log_url.setGeometry(QRect(120, 260, 70, 17))
        self.log_url.setFocusPolicy(Qt.NoFocus)
        self.import_xml_buton = QToolButton(self.Automatic)
        self.import_xml_buton.setObjectName(u"import_xml_buton")
        self.import_xml_buton.setGeometry(QRect(210, 40, 25, 21))
        self.import_xml_buton.setFocusPolicy(Qt.ClickFocus)
        self.import_csv_label = QLabel(self.Automatic)
        self.import_csv_label.setObjectName(u"import_csv_label")
        self.import_csv_label.setGeometry(QRect(20, 80, 71, 21))
        self.import_csv_buton = QToolButton(self.Automatic)
        self.import_csv_buton.setObjectName(u"import_csv_buton")
        self.import_csv_buton.setGeometry(QRect(210, 80, 25, 21))
        self.import_csv_buton.setFocusPolicy(Qt.ClickFocus)
        self.csv_path = QLineEdit(self.Automatic)
        self.csv_path.setObjectName(u"csv_path")
        self.csv_path.setEnabled(False)
        self.csv_path.setGeometry(QRect(100, 80, 113, 19))
        self.csv_path.setFocusPolicy(Qt.NoFocus)
        self.Import_description = QLabel(self.Automatic)
        self.Import_description.setObjectName(u"Import_description")
        self.Import_description.setGeometry(QRect(250, 30, 551, 81))
        self.Import_description.setWordWrap(True)
        self.tabwidget_auto_manual.addTab(self.Automatic, "")
        self.manual = QWidget()
        self.manual.setObjectName(u"manual")
        self.check_bwlastcopies_manual = QPushButton(self.manual)
        self.check_bwlastcopies_manual.setObjectName(u"check_bwlastcopies_manual")
        self.check_bwlastcopies_manual.setGeometry(QRect(460, 210, 81, 23))
        self.check_bwlastcopies_manual.setFocusPolicy(Qt.NoFocus)
        self.check_bwlastcopies_manual.setToolTipDuration(-1)
        self.check_bwlastcopies_manual.setAutoDefault(False)
        self.check_bwlastcopies_manual.setFlat(False)
        self.label_result = QLabel(self.manual)
        self.label_result.setObjectName(u"label_result")
        self.label_result.setGeometry(QRect(20, 260, 61, 21))
        self.label_result.setFont(font)
        self.description_manual = QLabel(self.manual)
        self.description_manual.setObjectName(u"description_manual")
        self.description_manual.setGeometry(QRect(20, 10, 1191, 101))
        self.description_manual.setTextFormat(Qt.RichText)
        self.description_manual.setScaledContents(False)
        self.description_manual.setWordWrap(True)
        self.label_author = QLabel(self.manual)
        self.label_author.setObjectName(u"label_author")
        self.label_author.setGeometry(QRect(20, 110, 41, 21))
        self.label_author.setLayoutDirection(Qt.LeftToRight)
        self.label_author.setAutoFillBackground(False)
        self.label_author.setMargin(0)
        self.label_author.setIndent(-1)
        self.label_author.setTextInteractionFlags(Qt.NoTextInteraction)
        self.label_title = QLabel(self.manual)
        self.label_title.setObjectName(u"label_title")
        self.label_title.setGeometry(QRect(300, 110, 41, 21))
        self.label_title.setLayoutDirection(Qt.LeftToRight)
        self.label_title.setAutoFillBackground(False)
        self.label_title.setMargin(0)
        self.label_title.setIndent(-1)
        self.label_title.setTextInteractionFlags(Qt.LinksAccessibleByMouse)
        self.bibid = QLabel(self.manual)
        self.bibid.setObjectName(u"bibid")
        self.bibid.setGeometry(QRect(20, 150, 81, 21))
        self.bib_id_input = QLineEdit(self.manual)
        self.bib_id_input.setObjectName(u"bib_id_input")
        self.bib_id_input.setGeometry(QRect(100, 150, 41, 20))
        sizePolicy.setHeightForWidth(self.bib_id_input.sizePolicy().hasHeightForWidth())
        self.bib_id_input.setSizePolicy(sizePolicy)
        self.bib_id_input.setFocusPolicy(Qt.StrongFocus)
        self.bib_id_input.setAutoFillBackground(False)
        self.bib_id_input.setInputMethodHints(Qt.ImhDigitsOnly)
        self.bib_id_input.setMaxLength(10)
        self.label_sigil = QLabel(self.manual)
        self.label_sigil.setObjectName(u"label_sigil")
        self.label_sigil.setGeometry(QRect(170, 150, 31, 21))
        self.label_sigil.setLayoutDirection(Qt.LeftToRight)
        self.label_sigil.setAutoFillBackground(False)
        self.label_sigil.setMargin(0)
        self.label_sigil.setIndent(-1)
        self.sigi_input = QLineEdit(self.manual)
        self.sigi_input.setObjectName(u"sigi_input")
        self.sigi_input.setGeometry(QRect(200, 150, 81, 20))
        self.sigi_input.setMaxLength(20)
        self.validate_sigil = QToolButton(self.manual)
        self.validate_sigil.setObjectName(u"validate_sigil")
        self.validate_sigil.setGeometry(QRect(280, 150, 25, 20))
        self.validate_sigil.setFocusPolicy(Qt.NoFocus)
        self.author_input = QLineEdit(self.manual)
        self.author_input.setObjectName(u"author_input")
        self.author_input.setGeometry(QRect(60, 110, 211, 20))
        self.author_input.setMaxLength(32767)
        self.author_input.setClearButtonEnabled(True)
        self.title_input = QLineEdit(self.manual)
        self.title_input.setObjectName(u"title_input")
        self.title_input.setGeometry(QRect(330, 110, 211, 20))
        self.title_input.setMaxLength(32767)
        self.title_input.setClearButtonEnabled(True)
        self.pass_issue = QLabel(self.manual)
        self.pass_issue.setObjectName(u"pass_issue")
        self.pass_issue.setGeometry(QRect(320, 150, 51, 21))
        self.pass_issue_input = QLineEdit(self.manual)
        self.pass_issue_input.setObjectName(u"pass_issue_input")
        self.pass_issue_input.setGeometry(QRect(370, 150, 113, 20))
        self.pass_issue_input.setCursorMoveStyle(Qt.VisualMoveStyle)
        self.pass_issue_input.setClearButtonEnabled(True)
        self.result_bwl_manual = QTextEdit(self.manual)
        self.result_bwl_manual.setObjectName(u"result_bwl_manual")
        self.result_bwl_manual.setEnabled(True)
        self.result_bwl_manual.setGeometry(QRect(20, 290, 1171, 311))
        sizePolicy.setHeightForWidth(self.result_bwl_manual.sizePolicy().hasHeightForWidth())
        self.result_bwl_manual.setSizePolicy(sizePolicy)
        self.result_bwl_manual.setMouseTracking(False)
        self.result_bwl_manual.setFocusPolicy(Qt.ClickFocus)
        self.result_bwl_manual.setInputMethodHints(Qt.ImhNone)
        self.result_bwl_manual.setTabChangesFocus(True)
        self.result_bwl_manual.setUndoRedoEnabled(True)
        self.result_bwl_manual.setReadOnly(True)
        self.result_bwl_manual.setTextInteractionFlags(Qt.TextSelectableByKeyboard|Qt.TextSelectableByMouse)
        self.savecsv = QCheckBox(self.manual)
        self.savecsv.setObjectName(u"savecsv")
        self.savecsv.setGeometry(QRect(20, 210, 81, 21))
        self.savecsv.setFocusPolicy(Qt.NoFocus)
        self.chec_status = QLabel(self.manual)
        self.chec_status.setObjectName(u"chec_status")
        self.chec_status.setGeometry(QRect(390, 210, 51, 21))
        self.chec_status.setAlignment(Qt.AlignCenter)
        self.chec_status.setWordWrap(False)
        self.chec_status.setTextInteractionFlags(Qt.NoTextInteraction)
        self.frame = QFrame(self.manual)
        self.frame.setObjectName(u"frame")
        self.frame.setGeometry(QRect(630, 110, 541, 161))
        self.frame.setAutoFillBackground(True)
        self.frame.setFrameShape(QFrame.StyledPanel)
        self.frame.setFrameShadow(QFrame.Raised)
        self.frame.setLineWidth(10)
        self.label_isil = QLabel(self.frame)
        self.label_isil.setObjectName(u"label_isil")
        self.label_isil.setGeometry(QRect(10, 10, 31, 21))
        self.isil_input = QLineEdit(self.frame)
        self.isil_input.setObjectName(u"isil_input")
        self.isil_input.setGeometry(QRect(50, 10, 71, 21))
        self.isil_input.setFocusPolicy(Qt.ClickFocus)
        self.search_isil = QToolButton(self.frame)
        self.search_isil.setObjectName(u"search_isil")
        self.search_isil.setGeometry(QRect(120, 10, 25, 21))
        self.search_isil.setFocusPolicy(Qt.ClickFocus)
        self.organame = QLabel(self.frame)
        self.organame.setObjectName(u"organame")
        self.organame.setGeometry(QRect(10, 50, 61, 21))
        self.tel_nr = QLabel(self.frame)
        self.tel_nr.setObjectName(u"tel_nr")
        self.tel_nr.setGeometry(QRect(330, 70, 47, 21))
        self.mail = QLabel(self.frame)
        self.mail.setObjectName(u"mail")
        self.mail.setGeometry(QRect(10, 70, 47, 21))
        self.adress = QLabel(self.frame)
        self.adress.setObjectName(u"adress")
        self.adress.setGeometry(QRect(10, 90, 47, 21))
        self.notification = QLabel(self.frame)
        self.notification.setObjectName(u"notification")
        self.notification.setGeometry(QRect(310, 90, 71, 21))
        self.organame_line = QLineEdit(self.frame)
        self.organame_line.setObjectName(u"organame_line")
        self.organame_line.setGeometry(QRect(70, 50, 423, 20))
        self.organame_line.setFocusPolicy(Qt.ClickFocus)
        self.organame_line.setEchoMode(QLineEdit.Normal)
        self.organame_line.setCursorPosition(0)
        self.mailto = QLineEdit(self.frame)
        self.mailto.setObjectName(u"mailto")
        self.mailto.setGeometry(QRect(70, 70, 211, 20))
        self.mailto.setFocusPolicy(Qt.ClickFocus)
        self.telnr = QLineEdit(self.frame)
        self.telnr.setObjectName(u"telnr")
        self.telnr.setGeometry(QRect(380, 70, 113, 20))
        self.telnr.setFocusPolicy(Qt.ClickFocus)
        self.noti_out = QLineEdit(self.frame)
        self.noti_out.setObjectName(u"noti_out")
        self.noti_out.setGeometry(QRect(380, 90, 113, 20))
        self.noti_out.setFocusPolicy(Qt.ClickFocus)
        self.adress_out = QTextEdit(self.frame)
        self.adress_out.setObjectName(u"adress_out")
        self.adress_out.setGeometry(QRect(70, 90, 211, 61))
        font1 = QFont()
        font1.setPointSize(8)
        self.adress_out.setFont(font1)
        self.adress_out.setFocusPolicy(Qt.ClickFocus)
        self.label_isil_link = QLabel(self.frame)
        self.label_isil_link.setObjectName(u"label_isil_link")
        self.label_isil_link.setGeometry(QRect(330, 110, 47, 21))
        self.isil_link_out = QTextBrowser(self.frame)
        self.isil_link_out.setObjectName(u"isil_link_out")
        self.isil_link_out.setGeometry(QRect(380, 110, 113, 20))
        self.isil_link_out.setFont(font1)
        self.isil_link_out.setFocusPolicy(Qt.ClickFocus)
        self.isil_link_out.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOff)
        self.isil_link_out.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOff)
        self.isil_link_out.setSizeAdjustPolicy(QAbstractScrollArea.AdjustToContents)
        self.isil_link_out.setLineWrapMode(QTextEdit.NoWrap)
        self.isil_link_out.setReadOnly(False)
        self.isil_link_out.setTextInteractionFlags(Qt.LinksAccessibleByKeyboard|Qt.LinksAccessibleByMouse|Qt.TextBrowserInteraction|Qt.TextEditable|Qt.TextEditorInteraction|Qt.TextSelectableByKeyboard|Qt.TextSelectableByMouse)
        self.isil_link_out.setOpenExternalLinks(True)
        self.tabwidget_auto_manual.addTab(self.manual, "")
        self.ReiheA_BWL.addTab(self.tab_bwl, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menuBar = QMenuBar(MainWindow)
        self.menuBar.setObjectName(u"menuBar")
        self.menuBar.setGeometry(QRect(0, 0, 1280, 21))
        self.menuDatei = QMenu(self.menuBar)
        self.menuDatei.setObjectName(u"menuDatei")
        self.menuEinstellungen = QMenu(self.menuBar)
        self.menuEinstellungen.setObjectName(u"menuEinstellungen")
        MainWindow.setMenuBar(self.menuBar)
        QWidget.setTabOrder(self.author_input, self.title_input)
        QWidget.setTabOrder(self.title_input, self.bib_id_input)
        QWidget.setTabOrder(self.bib_id_input, self.sigi_input)
        QWidget.setTabOrder(self.sigi_input, self.pass_issue_input)
        QWidget.setTabOrder(self.pass_issue_input, self.search_isil)

        self.menuBar.addAction(self.menuDatei.menuAction())
        self.menuBar.addAction(self.menuEinstellungen.menuAction())
        self.menuDatei.addAction(self.actionExit)
        self.menuEinstellungen.addAction(self.actionbearbeiten)

        self.retranslateUi(MainWindow)

        self.ReiheA_BWL.setCurrentIndex(1)
        self.tabwidget_auto_manual.setCurrentIndex(0)
        self.check_bwlastcopies_manual.setDefault(False)


        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"UniversalUI", None))
        self.actionReihe_A.setText(QCoreApplication.translate("MainWindow", u"Reihe A", None))
        self.actionBW_LastCopies.setText(QCoreApplication.translate("MainWindow", u"BW LastCopies", None))
        self.actionbearbeiten.setText(QCoreApplication.translate("MainWindow", u"Formatierung bearbeiten", None))
#if QT_CONFIG(shortcut)
        self.actionbearbeiten.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Shift+S", None))
#endif // QT_CONFIG(shortcut)
        self.actionExit.setText(QCoreApplication.translate("MainWindow", u"Exit", None))
#if QT_CONFIG(whatsthis)
        self.ReiheA_BWL.setWhatsThis("")
#endif // QT_CONFIG(whatsthis)
        self.pushButton.setText(QCoreApplication.translate("MainWindow", u"ClickMe", None))
#if QT_CONFIG(tooltip)
        self.progressBar.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.progressBar.setWhatsThis("")
#endif // QT_CONFIG(whatsthis)
        self.name.setText(QCoreApplication.translate("MainWindow", u"name", None))
        self.testloginfo.setPlainText("")
        self.loglabel.setText(QCoreApplication.translate("MainWindow", u"Logs:", None))
        self.ReiheA_BWL.setTabText(self.ReiheA_BWL.indexOf(self.tab_reihe_a), QCoreApplication.translate("MainWindow", u"Reihe A", None))
#if QT_CONFIG(tooltip)
        self.tabwidget_auto_manual.setToolTip("")
#endif // QT_CONFIG(tooltip)
        self.do_run_bwlastcopies.setText(QCoreApplication.translate("MainWindow", u"ClickMe", None))
#if QT_CONFIG(tooltip)
        self.progressbar_lastcopies.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.progressbar_lastcopies.setWhatsThis("")
#endif // QT_CONFIG(whatsthis)
        self.show_url.setText(QCoreApplication.translate("MainWindow", u"show url", None))
        self.loglabel_bwlastcopies.setText(QCoreApplication.translate("MainWindow", u"Logs:", None))
        self.import_xml_label.setText(QCoreApplication.translate("MainWindow", u"Import XML:", None))
        self.log_url.setText(QCoreApplication.translate("MainWindow", u"log url", None))
        self.import_xml_buton.setText(QCoreApplication.translate("MainWindow", u"...", None))
        self.import_csv_label.setText(QCoreApplication.translate("MainWindow", u"Import CSV:", None))
        self.import_csv_buton.setText(QCoreApplication.translate("MainWindow", u"...", None))
        self.Import_description.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Wenn in der Vergangenheit bereits eine CSV Datei aus der XML Datei erstellt wurde, kann diese \u00fcber das untere Feld geladen werden. CSV Dateien aus aDIS funktionieren nicht, da diese einen anderen Werttrenner benutzen als dieses Program. </p><p>Bsp.: normale CSV (Wert1, Wert2); diese CSV: (Wert1| Wert2)</p></body></html>", None))
        self.tabwidget_auto_manual.setTabText(self.tabwidget_auto_manual.indexOf(self.Automatic), QCoreApplication.translate("MainWindow", u"Automatisch", None))
#if QT_CONFIG(tooltip)
        self.check_bwlastcopies_manual.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.check_bwlastcopies_manual.setStatusTip(QCoreApplication.translate("MainWindow", u"Pr\u00fcft den Titel auf BW-LastCopies-Status", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.check_bwlastcopies_manual.setWhatsThis("")
#endif // QT_CONFIG(whatsthis)
        self.check_bwlastcopies_manual.setText(QCoreApplication.translate("MainWindow", u"Pr\u00fcfen", None))
        self.label_result.setText(QCoreApplication.translate("MainWindow", u"Ergebnis:", None))
        self.description_manual.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Dieser Tab dient dazu, selbst kleine suchen durchzuf\u00fchren. Um ein Medium auf BW-LastCopies-Status zu pr\u00fcfen, wird mindestens der Titel ben\u00f6tigt; der Autor kann erg\u00e4nzt werden. Nachdem der Titel und ggf. Autor in die unten stehenden Felder eingegeben wurde, auf &quot;Pr\u00fcfen&quot; klicken und das Ergebnis aus dem unten stehenden Feld ablesen.</p><p><br/></p></body></html>", None))
#if QT_CONFIG(statustip)
        self.label_author.setStatusTip("")
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.label_author.setWhatsThis("")
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.label_author.setAccessibleName("")
#endif // QT_CONFIG(accessibility)
        self.label_author.setText(QCoreApplication.translate("MainWindow", u"Autor:", None))
#if QT_CONFIG(statustip)
        self.label_title.setStatusTip("")
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.label_title.setWhatsThis("")
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.label_title.setAccessibleName("")
#endif // QT_CONFIG(accessibility)
        self.label_title.setText(QCoreApplication.translate("MainWindow", u"Titel:", None))
        self.bibid.setText(QCoreApplication.translate("MainWindow", u"Bibliotheks-ID:", None))
#if QT_CONFIG(tooltip)
        self.bib_id_input.setToolTip(QCoreApplication.translate("MainWindow", u"Die Bibliotheks-ID kann \u00fcber winIBW mithilfe des Befehls \"s bib\" ermittelt werden.", None))
#endif // QT_CONFIG(tooltip)
        self.bib_id_input.setInputMask("")
        self.bib_id_input.setText("")
        self.bib_id_input.setPlaceholderText(QCoreApplication.translate("MainWindow", u"20735", None))
#if QT_CONFIG(statustip)
        self.label_sigil.setStatusTip("")
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.label_sigil.setWhatsThis("")
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.label_sigil.setAccessibleName("")
#endif // QT_CONFIG(accessibility)
        self.label_sigil.setText(QCoreApplication.translate("MainWindow", u"Sigel:", None))
        self.sigi_input.setPlaceholderText(QCoreApplication.translate("MainWindow", u"DE-Frei129", None))
#if QT_CONFIG(tooltip)
        self.validate_sigil.setToolTip(QCoreApplication.translate("MainWindow", u"WIP: This will test the entered Sigil using the ISIL Database and return an error if the sigil was not found", None))
#endif // QT_CONFIG(tooltip)
        self.validate_sigil.setText(QCoreApplication.translate("MainWindow", u"?", None))
#if QT_CONFIG(tooltip)
        self.author_input.setToolTip(QCoreApplication.translate("MainWindow", u"Wenn kein Autor vorhanden ist, eine 0 (Null) eintragen", None))
#endif // QT_CONFIG(tooltip)
        self.author_input.setInputMask("")
        self.author_input.setText("")
        self.author_input.setPlaceholderText(QCoreApplication.translate("MainWindow", u"Nachname, Vorname", None))
#if QT_CONFIG(tooltip)
        self.title_input.setToolTip(QCoreApplication.translate("MainWindow", u"Der Vollst\u00e4ndige Titel des Werkes, z.B Java ist auch eine Insel", None))
#endif // QT_CONFIG(tooltip)
        self.title_input.setInputMask("")
        self.title_input.setText("")
        self.title_input.setPlaceholderText(QCoreApplication.translate("MainWindow", u"Vollst\u00e4ndiger Titel", None))
        self.pass_issue.setText(QCoreApplication.translate("MainWindow", u"Auflage:", None))
        self.pass_issue_input.setPlaceholderText(QCoreApplication.translate("MainWindow", u"3 / 3. Aufl. etc", None))
        self.result_bwl_manual.setDocumentTitle("")
        self.result_bwl_manual.setHtml(QCoreApplication.translate("MainWindow", u"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>", None))
        self.savecsv.setText(QCoreApplication.translate("MainWindow", u"Save CSV?", None))
        self.chec_status.setText(QCoreApplication.translate("MainWindow", u"Loading", None))
        self.label_isil.setText(QCoreApplication.translate("MainWindow", u"Sigel: ", None))
        self.search_isil.setText(QCoreApplication.translate("MainWindow", u"Go!", None))
        self.organame.setText(QCoreApplication.translate("MainWindow", u"OrgaName", None))
        self.tel_nr.setText(QCoreApplication.translate("MainWindow", u"Tel. Nr", None))
        self.mail.setText(QCoreApplication.translate("MainWindow", u"Mail", None))
        self.adress.setText(QCoreApplication.translate("MainWindow", u"Adress", None))
        self.notification.setText(QCoreApplication.translate("MainWindow", u"Anmerkung", None))
        self.label_isil_link.setText(QCoreApplication.translate("MainWindow", u"Isil Link", None))
        self.isil_link_out.setHtml(QCoreApplication.translate("MainWindow", u"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:'MS Shell Dlg 2'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>", None))
        self.tabwidget_auto_manual.setTabText(self.tabwidget_auto_manual.indexOf(self.manual), QCoreApplication.translate("MainWindow", u"Manuell", None))
#if QT_CONFIG(tooltip)
        self.tabwidget_auto_manual.setTabToolTip(self.tabwidget_auto_manual.indexOf(self.manual), QCoreApplication.translate("MainWindow", u"Hier kann ein einzelner Titel gesucht werden", None))
#endif // QT_CONFIG(tooltip)
        self.ReiheA_BWL.setTabText(self.ReiheA_BWL.indexOf(self.tab_bwl), QCoreApplication.translate("MainWindow", u"BW LastCopies", None))
        self.menuDatei.setTitle(QCoreApplication.translate("MainWindow", u"Datei", None))
        self.menuEinstellungen.setTitle(QCoreApplication.translate("MainWindow", u"Einstellungen", None))
    # retranslateUi

